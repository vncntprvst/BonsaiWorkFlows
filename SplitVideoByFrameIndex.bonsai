<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>CSVFilename</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>CSVFileName</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>DirName</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:PythonTransform">
              <scr:Name>csv filename</scr:Name>
              <scr:Description>csv filename</scr:Description>
              <scr:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  path = value.Item2 + value.Item1
  return path
</scr:Script>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="io:CsvReader">
        <io:FileName>D:\Vincent\vIRt41\vIRt41_0808\vIRt41_0808_4600_10Hz_10ms_10mW_20190808-185545_HSCam_VideoFrameSplitIndex.csv</io:FileName>
        <io:ListSeparator />
        <io:ScanPattern>%i,%i</io:ScanPattern>
        <io:SkipRows>0</io:SkipRows>
      </Expression>
      <Expression xsi:type="CreateObservable">
        <Name>VideoClips</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Expression>new(
Item1 as StartPosition,
Item2-Item1+1 as Count
)</scr:Expression>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="StartPosition" Selector="StartPosition" />
                <Property Name="Count" Selector="Count" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>SaveClip</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="Count" />
                  </Expression>
                  <Expression xsi:type="ExternalizedMapping">
                    <Property Name="StartPosition" />
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>Outpout video filename</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>VideoFileName</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>DirName</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:PythonTransform">
                          <scr:Name>split video filename</scr:Name>
                          <scr:Description>split video filename</scr:Description>
                          <scr:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  filename=value.Item1
  filename=filename.replace('.avi', '_Trial.avi') 
  path = value.Item2 + "workspace\\" + filename 
  return path
</scr:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source1" />
                        <Edge From="1" To="2" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="GroupWorkflow">
                      <Name>Outpout video filename</Name>
                      <Workflow>
                        <Nodes>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>VideoFileName</Name>
                          </Expression>
                          <Expression xsi:type="SubscribeSubject">
                            <Name>DirName</Name>
                          </Expression>
                          <Expression xsi:type="Combinator">
                            <Combinator xsi:type="rx:Zip" />
                          </Expression>
                          <Expression xsi:type="scr:PythonTransform">
                            <scr:Name>split video filename</scr:Name>
                            <scr:Description>split video filename</scr:Description>
                            <scr:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  filename=value.Item1
  filename=filename.replace('.avi', '_Trial.mp4') 
  path = value.Item2 + "Test\\" + filename 
  return path
</scr:Script>
                          </Expression>
                          <Expression xsi:type="WorkflowOutput" />
                        </Nodes>
                        <Edges>
                          <Edge From="0" To="2" Label="Source1" />
                          <Edge From="1" To="2" Label="Source2" />
                          <Edge From="2" To="3" Label="Source1" />
                          <Edge From="3" To="4" Label="Source1" />
                        </Edges>
                      </Workflow>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="FileName" />
                      </PropertyMappings>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>Input video filename</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>VideoFileName</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>DirName</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:PythonTransform">
                          <scr:Name>video filename</scr:Name>
                          <scr:Description>video filename</scr:Description>
                          <scr:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  path = value.Item2 + value.Item1
  return path
</scr:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source1" />
                        <Edge From="1" To="2" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:FileCapture">
                      <cv:FileName>D:\Vincent\vIRt41\vIRt41_0808\vIRt41_0808_4600_10Hz_10ms_10mW_20190808-185545_HSCam.avi</cv:FileName>
                      <cv:PlaybackRate>10000</cv:PlaybackRate>
                      <cv:StartPosition>265000</cv:StartPosition>
                      <cv:PositionUnits>Frames</cv:PositionUnits>
                      <cv:Loop>false</cv:Loop>
                      <cv:Playing>true</cv:Playing>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="cv:Grayscale" />
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:MaskPolygon">
                        <cv:Regions>
                          <cv:ArrayOfPoint>
                            <cv:Point>
                              <cv:X>0</cv:X>
                              <cv:Y>0</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>64</cv:X>
                              <cv:Y>0</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>64</cv:X>
                              <cv:Y>150</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>181</cv:X>
                              <cv:Y>479</cv:Y>
                            </cv:Point>
                            <cv:Point>
                              <cv:X>0</cv:X>
                              <cv:Y>479</cv:Y>
                            </cv:Point>
                          </cv:ArrayOfPoint>
                        </cv:Regions>
                        <cv:MaskType>ToZeroInv</cv:MaskType>
                        <cv:FillValue>
                          <cv:Val0>0</cv:Val0>
                          <cv:Val1>0</cv:Val1>
                          <cv:Val2>0</cv:Val2>
                          <cv:Val3>0</cv:Val3>
                        </cv:FillValue>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:Flip">
                        <cv:Mode>Vertical</cv:Mode>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>2500</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:ImageWriter">
                        <cv:Path>\\.\pipe\video</cv:Path>
                        <cv:Suffix>None</cv:Suffix>
                        <cv:Overwrite>false</cv:Overwrite>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="cv:VideoWriter">
                        <cv:FileName>D:\Vincent\vIRt41\vIRt41_0808\workspace\vIRt41_0808_4600_10Hz_10ms_10mW_20190808-185545_HSCam_Trial.avi</cv:FileName>
                        <cv:Suffix>FileCount</cv:Suffix>
                        <cv:Buffered>true</cv:Buffered>
                        <cv:Overwrite>false</cv:Overwrite>
                        <cv:FourCC>FMP4</cv:FourCC>
                        <cv:FrameRate>500</cv:FrameRate>
                        <cv:FrameSize>
                          <cv:Width>0</cv:Width>
                          <cv:Height>0</cv:Height>
                        </cv:FrameSize>
                        <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>MaskContour</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:Threshold">
                            <cv:ThresholdValue>35</cv:ThresholdValue>
                            <cv:MaxValue>255</cv:MaxValue>
                            <cv:ThresholdType>Binary</cv:ThresholdType>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:MorphologicalOperator">
                            <cv:Size>
                              <cv:Width>10</cv:Width>
                              <cv:Height>10</cv:Height>
                            </cv:Size>
                            <cv:Anchor>
                              <cv:X>5</cv:X>
                              <cv:Y>5</cv:Y>
                            </cv:Anchor>
                            <cv:Shape>Cross</cv:Shape>
                            <cv:Iterations>2</cv:Iterations>
                            <cv:Operation>Erode</cv:Operation>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:AdaptiveThreshold">
                            <cv:MaxValue>255</cv:MaxValue>
                            <cv:AdaptiveMethod>MeanC</cv:AdaptiveMethod>
                            <cv:ThresholdType>Binary</cv:ThresholdType>
                            <cv:BlockSize>3</cv:BlockSize>
                            <cv:Parameter>15</cv:Parameter>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:FindContours">
                            <cv:Mode>External</cv:Mode>
                            <cv:Method>ChainApproxNone</cv:Method>
                            <cv:Offset>
                              <cv:X>0</cv:X>
                              <cv:Y>0</cv:Y>
                            </cv:Offset>
                            <cv:MinArea>20000</cv:MinArea>
                            <cv:MaxArea>100000</cv:MaxArea>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:BinaryRegionAnalysis" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:LargestBinaryRegion" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="cv:ContourPoints" />
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>Outpout CSV mask filename</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>VideoFileName</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>DirName</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:PythonTransform">
                          <scr:Name>head contour filename</scr:Name>
                          <scr:Description />
                          <scr:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  filename=value.Item1
  if '.avi' in filename:
    filename=filename.replace('.avi', '_Mask_part.csv') 
  elif '.mp4' in filename:
    filename=filename.replace('.mp4', '_Mask_part.csv') 
  path = value.Item2 + "workspace\\" + filename 
  return path
</scr:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="2" Label="Source1" />
                        <Edge From="1" To="2" Label="Source2" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="io:CsvWriter">
                    <io:FileName>D:\Vincent\vIRt44\vIRt44_1210\workspace\vIRt44_1210_4600_20191210-185921_HSCam_Mask_part.csv</io:FileName>
                    <io:Delimiter>,</io:Delimiter>
                    <io:Append>false</io:Append>
                    <io:Overwrite>true</io:Overwrite>
                    <io:Suffix>FileCount</io:Suffix>
                    <io:IncludeHeader>false</io:IncludeHeader>
                    <io:Selector>it</io:Selector>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="rx:Timer">
                        <rx:DueTime>PT0.5S</rx:DueTime>
                        <rx:Period>PT0S</rx:Period>
                      </Combinator>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="rx:Zip" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="scr:PythonTransform">
                      <scr:Name>ffmpeg call</scr:Name>
                      <scr:Script>import os

#fname = 'D:\\Data\\Video\\video.avi'
pipename = r'\\.\pipe\video'

@returns(bool)
def process(value):
  fname=value.Item1;
  #os.system(str.format(r'ffmpeg -y -f rawvideo -vcodec rawvideo -s 640x480 -pix_fmt rgb24 -i {0} -c:v h264_nvenc -preset fast -b:v 4M {1}',pipename,fname))
  # -r 500 -preset fast  -b:v 2M
  os.system(str.format(r'ffmpeg -f rawvideo -vcodec rawvideo -s 640x480 -pix_fmt rgb24 -i {0} -f mp4 {1}',pipename,fname))
  #os.system(str.format(r'ffmpeg -c:v h264_nvenc -i {0} -vcodec copy -y {1}',pipename,fname))
  return True</scr:Script>
                    </Builder>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="12" Label="Source2" />
                  <Edge From="1" To="8" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="14" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="13" Label="Source2" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source2" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="18" Label="Source2" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Concat" />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Path</Name>
        <Description>Path</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="Directory" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>D:\Vincent\vIRt41\vIRt41_0808\</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:First" />
            </Expression>
            <Expression xsi:type="ReplaySubject">
              <Name>DirName</Name>
              <BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="VideoFileName" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>vIRt41_0808_4600_10Hz_10ms_10mW_20190808-185545_HSCam.avi</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:First" />
            </Expression>
            <Expression xsi:type="ReplaySubject">
              <Name>VideoFileName</Name>
              <BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="CSVFileName" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>vIRt41_0808_4600_10Hz_10ms_10mW_20190808-185545_HSCam_VideoFrameSplitIndex.csv</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:First" />
            </Expression>
            <Expression xsi:type="ReplaySubject">
              <Name>CSVFileName</Name>
              <BufferSize xsi:nil="true" />
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>