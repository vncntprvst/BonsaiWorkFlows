<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.0-preview">
  <Workflow xmlns:q2="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q3="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q4="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns:q1="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:KeyDown">
          <q1:Filter>S</q1:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:KeyDown">
          <q1:Filter>End</q1:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:SerialStringWrite">
          <q2:PortName>COM9</q2:PortName>
          <q2:NewLine>\r\n</q2:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Accumulate" />
      <Expression xsi:type="Multiply" />
      <Expression xsi:type="Subtract">
        <Operand xsi:type="IntProperty">
          <Value>1</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item2</Selector>
      </Expression>
      <Expression xsi:type="Parse">
        <Pattern>%i,%i,%i,%i,</Pattern>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:SerialStringRead">
          <q2:PortName>COM9</q2:PortName>
          <q2:NewLine />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:SerialStringWrite">
          <q2:PortName>COM9</q2:PortName>
          <q2:NewLine>\r\n</q2:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item4</Selector>
      </Expression>
      <Expression xsi:type="ExternalizedProperty">
        <MemberName>PortName</MemberName>
        <Name>PortName</Name>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>RandomStart</Name>
        <Description>RandomStart</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&lt;1</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="q3:ExpressionTransform">
              <q3:Expression>it ? 1 : 0</q3:Expression>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&gt;</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0.5</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="q3:PythonTransform">
              <q3:Script>from System import Random
generator = Random()

@returns(float)
def process(value):
  return generator.NextDouble()</q3:Script>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="WorkflowPropertyOfKeys">
                <Value>S</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>0</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>0</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>0</To>
              <Label>Source4</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>End signal</Name>
        <Description>End signal</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&lt;0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>1</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="q3:ExpressionTransform">
              <q3:Expression>it ? 1 : 0</q3:Expression>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&gt;</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="WorkflowPropertyOfKeys">
                <Value>End</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>0</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>0</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>0</To>
              <Label>Source4</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Histoconvet</Name>
        <Description>conversion to histogram</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="CombineLatest" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q4:Tile">
                <q4:RowTiles>2</q4:RowTiles>
                <q4:ColumnTiles>1</q4:ColumnTiles>
              </Combinator>
            </Expression>
            <Expression xsi:type="q3:PythonTransform">
              <q3:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Mat

@returns(Mat)
def process(value):
  return value.Reshape(0, 1)</q3:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q4:Tile">
                <q4:RowTiles>1</q4:RowTiles>
                <q4:ColumnTiles>10</q4:ColumnTiles>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q4:Buffer">
                <q4:Count>1</q4:Count>
                <q4:Skip xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="CombineLatest" />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source2</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="NestedWorkflow">
              <Name>FilterMatrix</Name>
              <Description>FilterMatrix</Description>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="q3:PythonSource">
                    <q3:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Mat
from System import Array

@returns(Mat)
def generate():
  array = Array.CreateInstance(int, 2, 20)
  for i in range(10):
    array[0, i] = 1
    array[1, i+10] = 1
  yield Mat.FromArray(array)</q3:Script>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>5</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>0</To>
              <Label>Source2</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Left blue</Name>
        <Description>Left condition</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Accumulate" />
            <Expression xsi:type="Add">
              <Operand xsi:type="IntProperty">
                <Value>1</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Right orange</Name>
        <Description>Right Condition</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Accumulate" />
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>1</Value>
                    </Operand>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>15</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>16</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>9</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>2</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>9</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>2</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>14</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>16</From>
        <To>14</To>
        <Label>Source2</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.SerialStringWrite, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.AccumulateBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.MultiplyBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.SubtractBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ParseBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.SerialStringRead, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.GreaterThanBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.DoubleProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[System.Windows.Forms.Keys, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Tile, Bonsai.Dsp, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Buffer, Bonsai.Dsp, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonSource, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.AddBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>