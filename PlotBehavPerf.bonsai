<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.1.2">
  <Workflow xmlns:q1="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q2="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q3="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Source">
        <PropertyMappings />
        <Generator xsi:type="q1:SerialStringRead">
          <q1:PortName>COM8</q1:PortName>
        </Generator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Item3</Selector>
      </Expression>
      <Expression xsi:type="Accumulate" />
      <Expression xsi:type="Multiply">
        <PropertyMappings />
      </Expression>
      <Expression xsi:type="Parse">
        <Pattern>%i,%i,%i,</Pattern>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Left blue</Name>
        <Description>Left condition</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Accumulate" />
            <Expression xsi:type="Add">
              <Operand xsi:type="IntProperty">
                <Value>1</Value>
              </Operand>
              <PropertyMappings />
            </Expression>
            <Expression xsi:type="Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>0</Value>
                    </Operand>
                    <PropertyMappings />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
              <PropertyMappings />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
        <PropertyMappings />
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>Rigth orange</Name>
        <Description>Right Condition</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Accumulate" />
            <Expression xsi:type="Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="IntProperty">
                      <Value>1</Value>
                    </Operand>
                    <PropertyMappings />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge>
                    <From>0</From>
                    <To>2</To>
                    <Label>Source1</Label>
                  </Edge>
                  <Edge>
                    <From>2</From>
                    <To>1</To>
                    <Label>Source1</Label>
                  </Edge>
                </Edges>
              </Workflow>
              <PropertyMappings />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
        <PropertyMappings />
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q3:Buffer">
          <q3:Count>1</q3:Count>
          <q3:Skip xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Item2</Selector>
      </Expression>
      <Expression xsi:type="Subtract">
        <Operand xsi:type="IntProperty">
          <Value>1</Value>
        </Operand>
        <PropertyMappings />
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q3:Tile">
          <q3:RowTiles>1</q3:RowTiles>
          <q3:ColumnTiles>10</q3:ColumnTiles>
        </Combinator>
      </Expression>
      <Expression xsi:type="q2:PythonTransform">
        <q2:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Mat

@returns(Mat)
def process(value):
  return value.Reshape(0, 1)</q2:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="q3:Tile">
          <q3:RowTiles>2</q3:RowTiles>
          <q3:ColumnTiles>1</q3:ColumnTiles>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <PropertyMappings />
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>FilterMatrix</Name>
        <Description>FilterMatrix</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="q2:PythonSource">
              <q2:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import Mat
from System import Array

@returns(Mat)
def generate():
  array = Array.CreateInstance(int, 2, 20)
  for i in range(10):
    array[0, i] = 1
    array[1, i+10] = 1
  yield Mat.FromArray(array)</q2:Script>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
        <PropertyMappings />
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>10</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>11</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>14</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>14</To>
        <Label>Source2</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.IO.SerialStringRead, Bonsai.System, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.AccumulateBuilder, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.MultiplyBuilder, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ParseBuilder, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.AddBuilder, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Buffer, Bonsai.Dsp, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.SubtractBuilder, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Tile, Bonsai.Dsp, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonSource, Bonsai.Scripting, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>