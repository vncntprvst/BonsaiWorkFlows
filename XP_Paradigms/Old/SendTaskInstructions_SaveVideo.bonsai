<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.2.0">
  <Workflow xmlns:q2="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q3="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q4="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q1="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="NestedWorkflow">
        <Name>RandomStart</Name>
        <Description>RandomStart</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&lt;1</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="q1:ExpressionTransform">
              <q1:Expression>it ? 1 : 0</q1:Expression>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&gt;</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0.5</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="q1:PythonTransform">
              <q1:Script>from System import Random
generator = Random()

@returns(float)
def process(value):
  return generator.NextDouble()</q1:Script>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="WorkflowPropertyOfKeys">
                <Value>S</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>0</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>0</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>0</To>
              <Label>Source4</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:KeyDown">
          <q2:Filter>S</q2:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:KeyDown">
          <q2:Filter>End</q2:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>COM4</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>End signal</Name>
        <Description>End signal</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&lt;0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>1</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="q1:ExpressionTransform">
              <q1:Expression>it ? 1 : 0</q1:Expression>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>&gt;</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="WorkflowPropertyOfKeys">
                <Value>End</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>0</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>0</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>0</To>
              <Label>Source4</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Repeat" />
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>WriteToSerial</Name>
        <Description>Write to serial</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedPropertyOfStringExternalizedPropertyOfStringSerialStringWrite">
              <MemberName>Value</MemberName>
              <Name>Value</Name>
              <Value />
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfStringSerialStringWrite">
              <MemberName>PortName</MemberName>
              <Name />
              <Value>COM4</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfStringSerialStringWrite">
              <MemberName>PortName</MemberName>
              <Name />
              <Value>COM4</Value>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:SerialStringWrite">
                <q3:PortName>COM4</q3:PortName>
                <q3:NewLine>\r\n</q3:NewLine>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:SerialStringWrite">
                <q3:PortName>COM4</q3:PortName>
                <q3:NewLine>\r\n</q3:NewLine>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source2</Name>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source3</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>0</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>3</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>4</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>4</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>3</To>
              <Label>Source2</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringSerialStringRead">
        <MemberName>PortName</MemberName>
        <Name>SerialRead</Name>
        <Value />
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>BehaviorCSV_filename</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedPropertyOfStringStringProperty">
              <MemberName>Value</MemberName>
              <Name />
              <Value />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>C:\Data\Behav\</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>testnewtask</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>_.csv</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Repeat" />
            </Expression>
            <Expression xsi:type="q1:PythonTransform">
              <q1:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(input):
#    Directory= value.Item1
#    FileName= value.Item2
#    FileNameSuf= value.Item3
    return input.Item1+input.Item2+input.Item3</q1:Script>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>4</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>4</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="q3:CsvWriter">
        <q3:FileName>C:\Data\Behav\testnewtask_.csv</q3:FileName>
        <q3:Append>false</q3:Append>
        <q3:Overwrite>false</q3:Overwrite>
        <q3:Suffix>Timestamp</q3:Suffix>
        <q3:IncludeHeader>false</q3:IncludeHeader>
        <q3:Selector>Source.Value,Source.Timestamp.DateTime</q3:Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timestamp" />
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringCsvWriter">
        <MemberName>FileName</MemberName>
        <Name />
        <Value />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Merge" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>Trial number, Trial type, Succes count, Time</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q3:SerialStringRead">
          <q3:PortName>COM4</q3:PortName>
          <q3:NewLine>\r\n</q3:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Repeat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>fileName</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:VideoWriter">
          <q4:FileName>C:\Data\Video\testnewtask_HSCam.avi</q4:FileName>
          <q4:Suffix>Timestamp</q4:Suffix>
          <q4:Buffered>true</q4:Buffered>
          <q4:Overwrite>false</q4:Overwrite>
          <q4:FourCC>FMP4</q4:FourCC>
          <q4:FrameRate>500</q4:FrameRate>
          <q4:FrameSize>
            <q4:Width>0</q4:Width>
            <q4:Height>0</q4:Height>
          </q4:FrameSize>
          <q4:ResizeInterpolation>NearestNeighbor</q4:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="q3:CsvWriter">
        <q3:FileName>C:\Data\Video\testnewtask_HSCam.csv</q3:FileName>
        <q3:Append>false</q3:Append>
        <q3:Overwrite>false</q3:Overwrite>
        <q3:Suffix>Timestamp</q3:Suffix>
        <q3:IncludeHeader>false</q3:IncludeHeader>
        <q3:Selector>Source.Timestamp</q3:Selector>
      </Expression>
      <Expression xsi:type="q1:PythonTransform">
        <q1:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *

font = Font(2)

@returns(IplImage)
def process(value):
  data = value.Item1
  start = value.Item2
  elapsed = data.Timestamp - start
  output = data.Value.Clone()
  CV.PutText(output, elapsed.ToString("hh\:mm\:ss\.fff"), Point(0,30), font, Scalar.Rgb(255,0,255))
  return output</q1:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Skip">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Timestamp</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Take">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timestamp" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:CameraCapture">
          <q4:Index>1</q4:Index>
          <q4:CaptureProperties>
            <q4:CapturePropertyAssignment>
              <q4:Property>Fps</q4:Property>
              <q4:Value>500</q4:Value>
            </q4:CapturePropertyAssignment>
          </q4:CaptureProperties>
        </Combinator>
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>HSCamAVI_filename</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedPropertyOfStringStringProperty">
              <MemberName>Value</MemberName>
              <Name />
              <Value />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>C:\Data\Video\</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>testnewtask</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>_HSCam.avi</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Repeat" />
            </Expression>
            <Expression xsi:type="q1:PythonTransform">
              <q1:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(input):
#    Directory= value.Item1
#    FileName= value.Item2
#    FileNameSuf= value.Item3
    return input.Item1+input.Item2+input.Item3</q1:Script>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>4</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>4</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringVideoWriter">
        <MemberName>FileName</MemberName>
        <Name />
        <Value />
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringCsvWriter">
        <MemberName>FileName</MemberName>
        <Name />
        <Value />
      </Expression>
      <Expression xsi:type="NestedWorkflow">
        <Name>HSCamCSV_filename</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>C:\Data\Video\</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>testnewtask</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>_HSCam.csv</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfStringStringProperty">
              <MemberName>Value</MemberName>
              <Name />
              <Value />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Repeat" />
            </Expression>
            <Expression xsi:type="q1:PythonTransform">
              <q1:Script>import clr

def getOutputType():
    return clr.GetClrType(str)

def process(input):
#    Directory= value.Item1
#    FileName= value.Item2
#    FileNameSuf= value.Item3
    return input.Item1+input.Item2+input.Item3</q1:Script>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>4</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>4</To>
              <Label>Source3</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>6</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>6</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>11</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>9</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>14</From>
        <To>12</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>29</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>26</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>16</From>
        <To>15</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>19</From>
        <To>17</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>20</From>
        <To>19</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>20</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>22</From>
        <To>20</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>23</From>
        <To>22</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>24</From>
        <To>21</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>24</From>
        <To>23</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>24</From>
        <To>18</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>25</From>
        <To>24</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>26</From>
        <To>27</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>27</From>
        <To>17</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>28</From>
        <To>18</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>29</From>
        <To>28</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.GreaterThanBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.DoubleProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[System.Windows.Forms.Keys, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Repeat, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.IO.SerialStringWrite, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.IO.SerialStringWrite, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.SerialStringWrite, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.IO.SerialStringRead, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.IO.CsvWriter, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Merge, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.SerialStringRead, Bonsai.System, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.VideoWriter, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Skip, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Take, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.CameraCapture, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Vision.VideoWriter, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>