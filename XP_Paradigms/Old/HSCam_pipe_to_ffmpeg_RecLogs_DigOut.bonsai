<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.0-preview">
  <Workflow xmlns:q2="clr-namespace:Bonsai.Video;assembly=Bonsai.Video" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q3="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q5="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino" xmlns:q4="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:q1="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns="https://bonsai-rx.org/2018/workflow">
    <Nodes>
      <Expression xsi:type="GroupWorkflow">
        <Name>Experiment name</Name>
        <Description />
        <Workflow>
          <Nodes>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="XP name" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>testSync</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="Directory" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>D:\Data\Behav\Video\</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Repeat" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="4" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="ReplaySubject">
        <Name>DirFileName</Name>
        <BufferSize xsi:nil="true" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timer">
          <DueTime>PT0.1S</DueTime>
          <Period>PT0S</Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>VideoFileName</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>DirFileName</Name>
            </Expression>
            <Expression xsi:type="q1:PythonTransform">
              <q1:Name>avi filename</q1:Name>
              <q1:Description>avi filename</q1:Description>
              <q1:Script>import clr
#clr.AddReference("Bonsai.System")
#from System.IO import Path
#from Bonsai.IO import PathHelper, PathSuffix
from datetime import datetime

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  timestamp = datetime.now().strftime("%Y%m%d-%H%M%S")
#  path = Path.Combine(Path.GetDirectoryName(value.Item1), Path.GetFileNameWithoutExtension(value.Item2)) + timestamp + ".csv"
  path = value.Item2 + value.Item1 + "_" + timestamp + "_" + "HSCam.avi"
  return path
</q1:Script>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="q1:PythonTransform">
        <q1:Name>ffmpeg call</q1:Name>
        <q1:Script>import os

#fname = 'D:\\Data\\Video\\video.avi'
pipename = r'\\.\pipe\video'

@returns(bool)
def process(value):
  fname=value.Item2;
  os.system(str.format(r'ffmpeg -y -f rawvideo -vcodec rawvideo -s 640x480 -r 500 -pix_fmt rgb24 -i {0} -c:v h264_nvenc -preset fast -b:v 20M {1}',pipename,fname))
  return True</q1:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:VideoCaptureDevice">
          <q2:Index>0</q2:Index>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q3:ImageWriter">
          <q3:Path>\\.\pipe\video</q3:Path>
          <q3:Suffix>None</q3:Suffix>
          <q3:Overwrite>false</q3:Overwrite>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timestamp" />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>CSVFileName</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>DirFileName</Name>
            </Expression>
            <Expression xsi:type="q1:PythonTransform">
              <q1:Name>csv filename</q1:Name>
              <q1:Description>csv filename</q1:Description>
              <q1:Script>import clr
#clr.AddReference("Bonsai.System")
#from System.IO import Path
#from Bonsai.IO import PathHelper, PathSuffix
from datetime import datetime

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  timestamp = datetime.now().strftime("%Y%m%d-%H%M%S")
#  path = Path.Combine(Path.GetDirectoryName(value.Item1), Path.GetFileNameWithoutExtension(value.Item2)) + timestamp + ".csv"
  path = value.Item2 + value.Item1 + "_" + timestamp + "_" + "HSCam.csv"
  return path
</q1:Script>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="FileName" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:DigitalInput">
          <q5:PortName>COM11</q5:PortName>
          <q5:Pin>6</q5:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="q4:CsvWriter">
        <q4:FileName>D:\Data\Behav\Video\testSync_20190717-173418_HSCam.csv</q4:FileName>
        <q4:Delimiter>,</q4:Delimiter>
        <q4:Append>false</q4:Append>
        <q4:Overwrite>false</q4:Overwrite>
        <q4:Suffix>None</q4:Suffix>
        <q4:IncludeHeader>false</q4:IncludeHeader>
        <q4:Selector>Item1.Timestamp.TimeOfDay.TotalMilliseconds,Item2</q4:Selector>
      </Expression>
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IsEmpty" />
            </Expression>
            <Expression xsi:type="BitwiseNot" />
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>true</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:DigitalOutput">
          <q5:PortName>COM11</q5:PortName>
          <q5:Pin>8</q5:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="Delay">
            <DueTime>PT1S</DueTime>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="BooleanProperty">
            <Value>false</Value>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="q5:DigitalOutput">
            <q5:PortName>COM11</q5:PortName>
            <q5:Pin>8</q5:Pin>
          </Combinator>
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="2" To="4" Label="Source1" />
      <Edge From="3" To="4" Label="Source2" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="6" To="8" Label="Source1" />
      <Edge From="6" To="14" Label="Source1" />
      <Edge From="8" To="12" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="13" Label="Source2" />
      <Edge From="11" To="12" Label="Source2" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="18" To="19" Label="Source1" />
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Arduino.DigitalInput, Bonsai.Arduino, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Arduino.DigitalOutput, Bonsai.Arduino, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.BitwiseNotBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.BooleanProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Delay, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.IsEmpty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Repeat, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timer, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Video.VideoCaptureDevice, Bonsai.Video, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.ImageWriter, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>