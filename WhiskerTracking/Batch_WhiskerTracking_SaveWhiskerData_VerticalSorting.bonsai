<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.0-preview">
  <Workflow xmlns:q1="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q2="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q3="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns="https://bonsai-rx.org/2018/workflow">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:GetFiles">
          <q1:Path>D:\Data\vIRt33\vIRt33_0424</q1:Path>
          <q1:SearchPattern>*.mp4</q1:SearchPattern>
          <q1:SearchOption>TopDirectoryOnly</q1:SearchOption>
        </Combinator>
      </Expression>
      <Expression xsi:type="SelectMany">
        <Name>FileNames</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Concat" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="CreateObservable">
        <Name>ProcessVideo</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="ReplaySubject">
              <Name>FileName</Name>
              <BufferSize xsi:nil="true" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>FileName</Name>
            </Expression>
            <Expression xsi:type="q2:PythonTransform">
              <q2:Script>@returns(str)
def process(value):
  return value.replace('.mp4', '_WhiskersBaseCentroids.csv')</q2:Script>
            </Expression>
            <Expression xsi:type="ExternalizedProperty">
              <MemberName>FileName</MemberName>
              <Name>CSVFileName</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>FileName</Name>
            </Expression>
            <Expression xsi:type="ExternalizedProperty">
              <MemberName>FileName</MemberName>
              <Name>FileName</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:FileCapture">
                <q3:FileName>D:\Data\vIRt33\vIRt33_0424\vIRt33_0424_4940.mp4</q3:FileName>
                <q3:PlaybackRate>5000</q3:PlaybackRate>
                <q3:StartPosition>0</q3:StartPosition>
                <q3:PositionUnits>Frames</q3:PositionUnits>
                <q3:Loop>false</q3:Loop>
                <q3:Playing>true</q3:Playing>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:Crop">
                <q3:RegionOfInterest>
                  <q3:X>0</q3:X>
                  <q3:Y>2</q3:Y>
                  <q3:Width>594</q3:Width>
                  <q3:Height>478</q3:Height>
                </q3:RegionOfInterest>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:Grayscale" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:AdaptiveThreshold">
                <q3:MaxValue>255</q3:MaxValue>
                <q3:AdaptiveMethod>MeanC</q3:AdaptiveMethod>
                <q3:ThresholdType>Binary</q3:ThresholdType>
                <q3:BlockSize>87</q3:BlockSize>
                <q3:Parameter>5</q3:Parameter>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:MaskPolygon">
                <q3:Regions>
                  <q3:ArrayOfPoint>
                    <q3:Point>
                      <q3:X>-21</q3:X>
                      <q3:Y>517</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>81</q3:X>
                      <q3:Y>489</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>93</q3:X>
                      <q3:Y>291</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>127</q3:X>
                      <q3:Y>305</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>160</q3:X>
                      <q3:Y>299</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>186</q3:X>
                      <q3:Y>249</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>214</q3:X>
                      <q3:Y>228</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>224</q3:X>
                      <q3:Y>173</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>271</q3:X>
                      <q3:Y>106</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>311</q3:X>
                      <q3:Y>88</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>372</q3:X>
                      <q3:Y>30</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>473</q3:X>
                      <q3:Y>73</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>613</q3:X>
                      <q3:Y>139</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>708</q3:X>
                      <q3:Y>29</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>633</q3:X>
                      <q3:Y>-47</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>377</q3:X>
                      <q3:Y>-85</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>-2</q3:X>
                      <q3:Y>-85</q3:Y>
                    </q3:Point>
                  </q3:ArrayOfPoint>
                  <q3:ArrayOfPoint>
                    <q3:Point>
                      <q3:X>597</q3:X>
                      <q3:Y>444</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>85</q3:X>
                      <q3:Y>444</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>83</q3:X>
                      <q3:Y>487</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>618</q3:X>
                      <q3:Y>497</q3:Y>
                    </q3:Point>
                  </q3:ArrayOfPoint>
                  <q3:ArrayOfPoint>
                    <q3:Point>
                      <q3:X>549</q3:X>
                      <q3:Y>444</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>606</q3:X>
                      <q3:Y>444</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>612</q3:X>
                      <q3:Y>139</q3:Y>
                    </q3:Point>
                    <q3:Point>
                      <q3:X>558</q3:X>
                      <q3:Y>115</q3:Y>
                    </q3:Point>
                  </q3:ArrayOfPoint>
                </q3:Regions>
                <q3:MaskType>ToZeroInv</q3:MaskType>
                <q3:FillValue>
                  <q3:Val0>255</q3:Val0>
                  <q3:Val1>255</q3:Val1>
                  <q3:Val2>255</q3:Val2>
                  <q3:Val3>0</q3:Val3>
                </q3:FillValue>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:BackgroundSubtraction">
                <q3:BackgroundFrames>0</q3:BackgroundFrames>
                <q3:AdaptationRate>0</q3:AdaptationRate>
                <q3:ThresholdValue>0</q3:ThresholdValue>
                <q3:ThresholdType>ToZero</q3:ThresholdType>
                <q3:SubtractionMethod>Absolute</q3:SubtractionMethod>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:FindContours">
                <q3:Mode>List</q3:Mode>
                <q3:Method>ChainApproxSimple</q3:Method>
                <q3:Offset>
                  <q3:X>0</q3:X>
                  <q3:Y>0</q3:Y>
                </q3:Offset>
                <q3:MinArea>250</q3:MinArea>
                <q3:MaxArea>5000</q3:MaxArea>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:BinaryRegionAnalysis" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="q3:SortBinaryRegions" />
            </Expression>
            <Expression xsi:type="q2:PythonTransform">
              <q2:Script>#return x,y values for base, center, tip of three central whiskers
import clr
clr.AddReference("System.Core")
clr.AddReference("OpenCV.Net")
from System import Tuple
from System.Linq import Enumerable
from OpenCV.Net import Point, Point2f

NaNPoint = Point2f(float.NaN,float.NaN)

def FindBasePoint(inputPointArray):
  pointList = Enumerable.OrderBy(inputPointArray, lambda x:x.X)
  firstPoint = Enumerable.First(pointList)
  return firstPoint

def FindTipPoint(inputPointArray):
  pointList = Enumerable.OrderByDescending(inputPointArray, lambda x:x.X)
  lastPoint = Enumerable.First(pointList)
  return lastPoint

@returns(Tuple[Tuple[Point2f,Point2f,Point2f],Tuple[Point2f,Point2f,Point2f],Tuple[Point2f,Point2f,Point2f]])
def process(sortedRegions):
  #vSortRegionList = list(Enumerable.OrderByDescending(sortedRegions, lambda x:x.Orientation))
  vSortRegionList = list(Enumerable.OrderByDescending(sortedRegions, lambda x:FindBasePoint(x.Contour.ToArray[Point]()).Y))
  if len(vSortRegionList) &gt;=3:
    baseList=Tuple.Create(Point2f(FindBasePoint(vSortRegionList[0].Contour.ToArray[Point]())),Point2f(FindBasePoint(vSortRegionList[1].Contour.ToArray[Point]())),Point2f(FindBasePoint(vSortRegionList[2].Contour.ToArray[Point]())))
    centroidList=Tuple.Create(Point2f(vSortRegionList[0].Centroid.X,vSortRegionList[0].Centroid.Y),Point2f(vSortRegionList[1].Centroid.X,vSortRegionList[1].Centroid.Y),Point2f(vSortRegionList[2].Centroid.X,vSortRegionList[2].Centroid.Y))
    tipList=Tuple.Create(Point2f(FindTipPoint(vSortRegionList[0].Contour.ToArray[Point]())),Point2f(FindTipPoint(vSortRegionList[1].Contour.ToArray[Point]())),Point2f(FindTipPoint(vSortRegionList[2].Contour.ToArray[Point]())))
  elif len(vSortRegionList) ==2:
    baseList=Tuple.Create(Point2f(FindBasePoint(vSortRegionList[0].Contour.ToArray[Point]())),Point2f(FindBasePoint(vSortRegionList[1].Contour.ToArray[Point]())),NaNPoint)
    centroidList=Tuple.Create(Point2f(vSortRegionList[0].Centroid.X,vSortRegionList[0].Centroid.Y),Point2f(vSortRegionList[1].Centroid.X,vSortRegionList[1].Centroid.Y),NaNPoint)
    tipList=Tuple.Create(Point2f(FindTipPoint(vSortRegionList[0].Contour.ToArray[Point]())),Point2f(FindTipPoint(vSortRegionList[1].Contour.ToArray[Point]())),NaNPoint)
  elif len(vSortRegionList) == 1:
    baseList=Tuple.Create(Point2f(FindBasePoint(vSortRegionList[0].Contour.ToArray[Point]())),NaNPoint,NaNPoint)
    centroidList=Tuple.Create(Point2f(vSortRegionList[0].Centroid.X,vSortRegionList[0].Centroid.Y),NaNPoint,NaNPoint) 
    tipList=Tuple.Create(Point2f(FindTipPoint(vSortRegionList[0].Contour.ToArray[Point]())),NaNPoint,NaNPoint)
  else:
    baseList=Tuple.Create(NaNPoint,NaNPoint,NaNPoint)
    centroidList=Tuple.Create(NaNPoint,NaNPoint,NaNPoint)
    tipList=Tuple.Create(NaNPoint,NaNPoint,NaNPoint)

  return Tuple.Create(baseList, centroidList, tipList)
</q2:Script>
            </Expression>
            <Expression xsi:type="q2:ExpressionTransform">
              <q2:Expression>new(
Item1.Item1 as Whisker1_Base,
Item1.Item2 as Whisker2_Base,
Item1.Item3 as Whisker3_Base,
Item2.Item1 as Whisker1_Centroid,
Item2.Item2 as Whisker2_Centroid,
Item2.Item3 as Whisker3_Centroid,
Item3.Item1 as Whisker1_Tip,
Item3.Item2 as Whisker2_Tip,
Item3.Item3 as Whisker3_Tip
)</q2:Expression>
            </Expression>
            <Expression xsi:type="q1:CsvWriter">
              <q1:FileName>D:\Data\vIRt33\vIRt33_0424\vIRt33_0424_4940_WhiskersBaseCentroids.csv</q1:FileName>
              <q1:Delimiter>,</q1:Delimiter>
              <q1:Append>false</q1:Append>
              <q1:Overwrite>true</q1:Overwrite>
              <q1:Suffix>None</q1:Suffix>
              <q1:IncludeHeader>true</q1:IncludeHeader>
              <q1:Selector>Whisker1_Base,Whisker1_Centroid,Whisker2_Base,Whisker2_Centroid,Whisker3_Base,Whisker3_Centroid,Whisker4_Base,Whisker4_Centroid,Whisker5_Base,Whisker5_Centroid,Whisker6_Base,Whisker6_Centroid</q1:Selector>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="18" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="18" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Concat" />
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.GetFiles, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Concat, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.AdaptiveThreshold, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BackgroundSubtraction, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FileCapture, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.MaskPolygon, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.SortBinaryRegions, Bonsai.Vision, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>