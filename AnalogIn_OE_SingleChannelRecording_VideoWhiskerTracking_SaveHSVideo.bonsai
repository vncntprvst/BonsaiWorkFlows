<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.3.0">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q1="clr-namespace:Bonsai.Ephys;assembly=Bonsai.Ephys" xmlns:q2="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns:q3="clr-namespace:Bonsai.Audio;assembly=Bonsai.Audio" xmlns:q4="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:q5="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q6="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q7="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Rhd2000EvalBoard">
          <q1:BitFileName>C:\OpenEphys\open-ephys-windows\rhd2000.bit</q1:BitFileName>
          <q1:SampleRate>SampleRate30000Hz</q1:SampleRate>
          <q1:FastSettle>false</q1:FastSettle>
          <q1:LowerBandwidth>0.1</q1:LowerBandwidth>
          <q1:UpperBandwidth>7500</q1:UpperBandwidth>
          <q1:DspCutoffFrequency>1</q1:DspCutoffFrequency>
          <q1:DspEnabled>true</q1:DspEnabled>
          <q1:CableDelayA xsi:nil="true" />
          <q1:CableDelayB xsi:nil="true" />
          <q1:CableDelayC xsi:nil="true" />
          <q1:CableDelayD xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.TtlIn</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:MatrixWriter">
          <q2:Path>C:\Data\raw\Bonsai\_TTL_.bin</q2:Path>
          <q2:Suffix>Timestamp</q2:Suffix>
          <q2:Overwrite>false</q2:Overwrite>
          <q2:Layout>ColumnMajor</q2:Layout>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.BoardAdcData</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:DetectSpikes">
          <q2:Delay>20</q2:Delay>
          <q2:Length>60</q2:Length>
          <q2:Threshold>
            <q2:double>0.0046958286756486447</q2:double>
          </q2:Threshold>
          <q2:WaveformRefinement>AlignPeaks</q2:WaveformRefinement>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:FrequencyFilter">
          <q2:SamplingFrequency>30000</q2:SamplingFrequency>
          <q2:Cutoff1>300</q2:Cutoff1>
          <q2:Cutoff2>0</q2:Cutoff2>
          <q2:KernelLength>60</q2:KernelLength>
          <q2:FilterType>HighPass</q2:FilterType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:SelectChannels">
          <q2:Channels>
            <q2:int>1</q2:int>
          </q2:Channels>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:AdcScale">
          <q1:AdcType>BoardAdc</q1:AdcType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:MatrixWriter">
          <q2:Suffix>None</q2:Suffix>
          <q2:Overwrite>false</q2:Overwrite>
          <q2:Layout>ColumnMajor</q2:Layout>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:TriggeredBuffer">
          <q2:Count>1500</q2:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Delay">
          <q2:Count>300</q2:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Accumulate" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Threshold">
          <q2:ThresholdValue>0.5</q2:ThresholdValue>
          <q2:MaxValue>1</q2:MaxValue>
          <q2:ThresholdType>Binary</q2:ThresholdType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q3:AudioPlayback">
          <q3:DeviceName>Generic Software on Speakers (Realtek High Definition Audio)</q3:DeviceName>
          <q3:Frequency>30000</q3:Frequency>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:ConvertScale">
          <q2:Depth>U16</q2:Depth>
          <q2:Scale>5000</q2:Scale>
          <q2:Shift>0</q2:Shift>
        </Combinator>
      </Expression>
      <Expression xsi:type="q4:CsvWriter">
        <q4:FileName>C:\Data\Video\test3_20181213-134326HSCam.csv</q4:FileName>
        <q4:Append>false</q4:Append>
        <q4:Overwrite>false</q4:Overwrite>
        <q4:Suffix>None</q4:Suffix>
        <q4:IncludeHeader>false</q4:IncludeHeader>
        <q4:Selector>Source.Timestamp</q4:Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:DrawConnectedComponents" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:FrequencyFilter">
          <q2:SamplingFrequency>500</q2:SamplingFrequency>
          <q2:Cutoff1>10</q2:Cutoff1>
          <q2:Cutoff2>1</q2:Cutoff2>
          <q2:KernelLength>50</q2:KernelLength>
          <q2:FilterType>LowPass</q2:FilterType>
        </Combinator>
      </Expression>
      <Expression xsi:type="q6:PythonTransform">
        <q6:Script>import clr
clr.AddReference("System.Core")
from System.Linq import Enumerable

@returns(float)
def process(value):
  # Order blob list by descending area
  #largest = list(Enumerable.OrderByDescending(value, lambda x:x.Area))

  # Order blob list by leftmost centroid
  leftmost = list(Enumerable.OrderBy(value, lambda x:x.Centroid.X))

  if len(leftmost) &gt;= 1:
    return float(leftmost[0].Orientation)
  #elif len(largest) &gt;= 2:
  #  a1 = largest[0].Orientation
  #  a2 = largest[1].Orientation
  #  return (a1+a2)/2
  #elif len(largest) &gt;= 2:
  #  a1 = largest[0].Orientation
  #  a2 = largest[1].Orientation
  #  a3 = largest[2].Orientation
  #  return (a1+a2+a3)/3
  else:
    # otherwise, return nan
    return float.NaN</q6:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:SortBinaryRegions" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:FindContours">
          <q5:Mode>List</q5:Mode>
          <q5:Method>ChainApproxSimple</q5:Method>
          <q5:Offset>
            <q5:X>0</q5:X>
            <q5:Y>0</q5:Y>
          </q5:Offset>
          <q5:MinArea>300</q5:MinArea>
          <q5:MaxArea>10000</q5:MaxArea>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:BackgroundSubtraction">
          <q5:BackgroundFrames>0</q5:BackgroundFrames>
          <q5:AdaptationRate>0</q5:AdaptationRate>
          <q5:ThresholdValue>0</q5:ThresholdValue>
          <q5:ThresholdType>Binary</q5:ThresholdType>
          <q5:SubtractionMethod>Absolute</q5:SubtractionMethod>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:MaskPolygon">
          <q5:Regions>
            <q5:ArrayOfPoint>
              <q5:Point>
                <q5:X>220</q5:X>
                <q5:Y>51</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>220</q5:X>
                <q5:Y>51</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>220</q5:X>
                <q5:Y>52</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>220</q5:X>
                <q5:Y>52</q5:Y>
              </q5:Point>
            </q5:ArrayOfPoint>
            <q5:ArrayOfPoint>
              <q5:Point>
                <q5:X>565</q5:X>
                <q5:Y>213</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>590</q5:X>
                <q5:Y>224</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>588</q5:X>
                <q5:Y>263</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>575</q5:X>
                <q5:Y>301</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>586</q5:X>
                <q5:Y>414</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>623</q5:X>
                <q5:Y>424</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>624</q5:X>
                <q5:Y>0</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>214</q5:X>
                <q5:Y>0</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>6</q5:X>
                <q5:Y>2</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>174</q5:X>
                <q5:Y>75</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>333</q5:X>
                <q5:Y>112</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>440</q5:X>
                <q5:Y>122</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>497</q5:X>
                <q5:Y>153</q5:Y>
              </q5:Point>
              <q5:Point>
                <q5:X>536</q5:X>
                <q5:Y>186</q5:Y>
              </q5:Point>
            </q5:ArrayOfPoint>
          </q5:Regions>
          <q5:MaskType>ToZeroInv</q5:MaskType>
          <q5:FillValue>
            <q5:Val0>255</q5:Val0>
            <q5:Val1>255</q5:Val1>
            <q5:Val2>255</q5:Val2>
            <q5:Val3>0</q5:Val3>
          </q5:FillValue>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:AdaptiveThreshold">
          <q5:MaxValue>255</q5:MaxValue>
          <q5:AdaptiveMethod>MeanC</q5:AdaptiveMethod>
          <q5:ThresholdType>Binary</q5:ThresholdType>
          <q5:BlockSize>35</q5:BlockSize>
          <q5:Parameter>3</q5:Parameter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:Grayscale" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:Crop">
          <q5:RegionOfInterest>
            <q5:X>4</q5:X>
            <q5:Y>66</q5:Y>
            <q5:Width>624</q5:Width>
            <q5:Height>414</q5:Height>
          </q5:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="DoubleProperty">
          <Value>1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="BitwiseAnd" />
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:FileCapture">
          <q5:FileName>E:\Data\raw\OpenEphys\vIRt23\vIRt23_1211\vIRt23_1211_3700_50ms2Hz10mW.mp4</q5:FileName>
          <q5:PlaybackRate>0</q5:PlaybackRate>
          <q5:StartPosition>0</q5:StartPosition>
          <q5:PositionUnits>Frames</q5:PositionUnits>
          <q5:Loop>false</q5:Loop>
          <q5:Playing>true</q5:Playing>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C:\Data\Video\</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Repeat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:ImageWriter">
          <q5:Path>\\.\pipe\video</q5:Path>
          <q5:Suffix>None</q5:Suffix>
          <q5:Overwrite>false</q5:Overwrite>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="SkipUntil" />
      </Expression>
      <Expression xsi:type="q6:PythonTransform">
        <q6:Name>avi filename</q6:Name>
        <q6:Description>avi filename</q6:Description>
        <q6:Script>import clr
#clr.AddReference("Bonsai.System")
#from System.IO import Path
#from Bonsai.IO import PathHelper, PathSuffix
from datetime import datetime

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  timestamp = datetime.now().strftime("%Y%m%d-%H%M%S")
#  path = Path.Combine(Path.GetDirectoryName(value.Item1), Path.GetFileNameWithoutExtension(value.Item2)) + timestamp + ".csv"
  path = value.Item2 + value.Item1 + "_" + timestamp + "HSCam.avi"
  return path
</q6:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Repeat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>test3</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="q6:PythonTransform">
        <q6:Name>csv filename</q6:Name>
        <q6:Script>import clr
#clr.AddReference("Bonsai.System")
#from System.IO import Path
#from Bonsai.IO import PathHelper, PathSuffix
from datetime import datetime

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  timestamp = datetime.now().strftime("%Y%m%d-%H%M%S")
#  path = Path.Combine(Path.GetDirectoryName(value.Item1), Path.GetFileNameWithoutExtension(value.Item2)) + timestamp + ".csv"
  path = value.Item2 + value.Item1 + "_" + timestamp + "HSCam.csv"
  return path
</q6:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>test3</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C:\Data\Video\</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringStringProperty">
        <MemberName>Value</MemberName>
        <Name>XP name</Name>
        <Value>test3</Value>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringStringProperty">
        <MemberName>Value</MemberName>
        <Name>Directory</Name>
        <Value>C:\Data\test</Value>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q5:CameraCapture">
          <q5:Index>1</q5:Index>
          <q5:CaptureProperties />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q7:KeyDown">
          <q7:Filter>R</q7:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timestamp" />
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringCsvWriter">
        <MemberName>FileName</MemberName>
        <Name>HScam csv filename</Name>
        <Value />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Timer">
          <DueTime>PT1S</DueTime>
          <Period>PT0S</Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="q6:PythonTransform">
        <q6:Name>ffmpeg call</q6:Name>
        <q6:Script>import os

#fname = 'D:\\Data\\Video\\video.avi'
pipename = r'\\.\pipe\video'

@returns(bool)
def process(value):
  fname=value.Item2;
  os.system(str.format(r'ffmpeg -y -f rawvideo -vcodec rawvideo -s 640x480 -r 500 -pix_fmt rgb24 -i {0} -c:v h264_nvenc -preset fast -b:v 20M {1}',pipename,fname))
  return True</q6:Script>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringMatrixWriter">
        <MemberName>Path</MemberName>
        <Name>ADCrec filename</Name>
      </Expression>
      <Expression xsi:type="q6:PythonTransform">
        <q6:Name>csv filename</q6:Name>
        <q6:Script>import clr
#clr.AddReference("Bonsai.System")
#from System.IO import Path
#from Bonsai.IO import PathHelper, PathSuffix
from datetime import datetime

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  timestamp = datetime.now().strftime("%Y%m%d-%H%M%S")
#  path = Path.Combine(Path.GetDirectoryName(value.Item1), Path.GetFileNameWithoutExtension(value.Item2)) + timestamp + ".csv"
  path = value.Item2 + value.Item1 + "_" + timestamp + "AIN1.bin"
  return path
</q6:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Repeat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>test3</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C:\Data\Video\</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfStringMatrixWriter">
        <MemberName>Path</MemberName>
        <Name>TTL filename</Name>
        <Value>C:\Data\raw\Bonsai\_TTL_.bin</Value>
      </Expression>
      <Expression xsi:type="q6:PythonTransform">
        <q6:Name>csv filename</q6:Name>
        <q6:Script>import clr
#clr.AddReference("Bonsai.System")
#from System.IO import Path
#from Bonsai.IO import PathHelper, PathSuffix
from datetime import datetime

def getOutputType():
    return clr.GetClrType(str)

def process(value):
  timestamp = datetime.now().strftime("%Y%m%d-%H%M%S")
#  path = Path.Combine(Path.GetDirectoryName(value.Item1), Path.GetFileNameWithoutExtension(value.Item2)) + timestamp + ".csv"
  path = value.Item2 + value.Item1 + "_" + timestamp + "_TTL.csv"
  return path
</q6:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Repeat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>test3</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>C:\Data\Video\</Value>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>0</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>28</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>15</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>11</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>13</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>19</From>
        <To>18</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>20</From>
        <To>19</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>20</From>
        <To>17</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>20</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>22</From>
        <To>21</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>23</From>
        <To>22</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>24</From>
        <To>23</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>25</From>
        <To>24</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>26</From>
        <To>25</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>27</From>
        <To>26</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>28</From>
        <To>30</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>29</From>
        <To>28</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>30</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>31</From>
        <To>27</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>32</From>
        <To>39</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>33</From>
        <To>40</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>35</From>
        <To>34</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>35</From>
        <To>48</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>36</From>
        <To>51</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>37</From>
        <To>36</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>38</From>
        <To>39</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>39</From>
        <To>37</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>40</From>
        <To>49</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>41</From>
        <To>33</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>42</From>
        <To>41</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>43</From>
        <To>41</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>44</From>
        <To>42</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>44</From>
        <To>38</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>44</From>
        <To>57</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>44</From>
        <To>63</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>45</From>
        <To>43</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>45</From>
        <To>32</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>45</From>
        <To>58</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>45</From>
        <To>64</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>46</From>
        <To>35</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>47</From>
        <To>35</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>48</From>
        <To>16</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>49</From>
        <To>16</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>50</From>
        <To>51</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>51</From>
        <To>52</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>53</From>
        <To>8</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>54</From>
        <To>53</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>55</From>
        <To>54</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>56</From>
        <To>55</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>57</From>
        <To>56</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>58</From>
        <To>56</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>59</From>
        <To>2</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>60</From>
        <To>59</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>61</From>
        <To>60</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>62</From>
        <To>61</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>63</From>
        <To>62</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>64</From>
        <To>62</To>
        <Label>Source2</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Ephys.Rhd2000EvalBoard, Bonsai.Ephys, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.MatrixWriter, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.DetectSpikes, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.FrequencyFilter, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.SelectChannels, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Ephys.AdcScale, Bonsai.Ephys, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.TriggeredBuffer, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Delay, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Accumulate, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Threshold, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Audio.AudioPlayback, Bonsai.Audio, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.ConvertScale, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.CsvWriter, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.DrawConnectedComponents, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.SortBinaryRegions, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BinaryRegionAnalysis, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FindContours, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BackgroundSubtraction, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.MaskPolygon, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.AdaptiveThreshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.DoubleProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.BitwiseAndBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.FileCapture, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Repeat, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.ImageWriter, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.SkipUntil, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.CameraCapture, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timestamp, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.IO.CsvWriter, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Timer, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Dsp.MatrixWriter, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>