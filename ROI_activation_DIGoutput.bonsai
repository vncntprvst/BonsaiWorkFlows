<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.2.0">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q1="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q2="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns:q3="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q4="clr-namespace:Bonsai.Arduino;assembly=Bonsai.Arduino" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:CameraCapture">
          <q1:Index>0</q1:Index>
          <q1:CaptureProperties />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Crop">
          <q1:RegionOfInterest>
            <q1:X>0</q1:X>
            <q1:Y>0</q1:Y>
            <q1:Width>0</q1:Width>
            <q1:Height>0</q1:Height>
          </q1:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Crop">
          <q1:RegionOfInterest>
            <q1:X>0</q1:X>
            <q1:Y>0</q1:Y>
            <q1:Width>0</q1:Width>
            <q1:Height>0</q1:Height>
          </q1:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Grayscale" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Threshold">
          <q1:ThresholdValue>128</q1:ThresholdValue>
          <q1:MaxValue>255</q1:MaxValue>
          <q1:ThresholdType>Binary</q1:ThresholdType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:Crop">
          <q1:RegionOfInterest>
            <q1:X>0</q1:X>
            <q1:Y>0</q1:Y>
            <q1:Width>0</q1:Width>
            <q1:Height>0</q1:Height>
          </q1:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Sum" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Val0</Selector>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Val0</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Sum" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Val0</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Sum" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Zip" />
      </Expression>
      <Expression xsi:type="q3:ExpressionTransform">
        <q3:Expression>new(
Item2 &gt; Item3 ? (Item1 &gt; Item2 ? 1 : 2) : 3 as port,
Math.Max(Item1,Math.Max(Item2, Item3)) as activation)</q3:Expression>
      </Expression>
      <Expression xsi:type="Condition">
        <Name>Activation0</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="MemberSelector">
              <Selector>Source.port</Selector>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="IntProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.activation</Selector>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfDoubleGreaterThanBuilder">
              <MemberName>Value</MemberName>
              <Name>Threshold</Name>
              <Value>0</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32EqualBuilder">
              <MemberName>Value</MemberName>
              <Name>Port</Name>
              <Value>1</Value>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="LogicalAnd" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>0</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>8</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>3</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Condition">
        <Name>Activation1</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="MemberSelector">
              <Selector>Source.port</Selector>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="IntProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.activation</Selector>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfDoubleGreaterThanBuilder">
              <MemberName>Value</MemberName>
              <Name>Threshold</Name>
              <Value>0</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32EqualBuilder">
              <MemberName>Value</MemberName>
              <Name>Port</Name>
              <Value>2</Value>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="LogicalAnd" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>0</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>8</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>3</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Condition">
        <Name>Activation2</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="MemberSelector">
              <Selector>Source.port</Selector>
            </Expression>
            <Expression xsi:type="Equal">
              <Operand xsi:type="IntProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.activation</Selector>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfDoubleGreaterThanBuilder">
              <MemberName>Value</MemberName>
              <Name>Threshold</Name>
              <Value>0</Value>
            </Expression>
            <Expression xsi:type="ExternalizedPropertyOfInt32EqualBuilder">
              <MemberName>Value</MemberName>
              <Name>Port</Name>
              <Value>3</Value>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Zip" />
            </Expression>
            <Expression xsi:type="LogicalAnd" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>0</From>
              <To>4</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>8</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>5</From>
              <To>8</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>5</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>3</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>8</From>
              <To>9</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>9</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:DigitalOutput">
          <q4:PortName>COM6</q4:PortName>
          <q4:Pin>3</q4:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>true</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:DigitalOutput">
          <q4:PortName>COM6</q4:PortName>
          <q4:Pin>4</q4:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>true</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:DigitalOutput">
          <q4:PortName>COM6</q4:PortName>
          <q4:Pin>5</q4:Pin>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>true</Value>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>11</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>12</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>12</To>
        <Label>Source3</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>15</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>16</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>14</From>
        <To>18</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>20</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>16</From>
        <To>22</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>18</From>
        <To>17</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>20</From>
        <To>19</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>22</From>
        <To>21</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Vision.CameraCapture, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Crop, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.Sum, Bonsai.Dsp, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Zip, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.ExpressionTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.GreaterThanBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.DoubleProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Double, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.GreaterThanBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.LogicalAndBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Arduino.DigitalOutput, Bonsai.Arduino, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.BooleanProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>